name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
      - 'release/**'
  pull_request:
    branches:
      - main
      - develop
      - 'release/**'

env:
  GH_NPM_TOKEN: ${{ secrets.GH_NPM_TOKEN }}
  PAYMENT_APP_PORT: ${{ secrets.PAYMENT_APP_PORT }}
  CORS_WHITELIST: ${{ secrets.CORS_WHITELIST }}
  WALLET_ENDPOINT: ${{secrets.WALLET_ENDPOINT}}
  PAYMENT_DB_HOST: ${{secrets.PAYMENT_DB_HOST}}
  PAYMENT_DB_NAME: ${{secrets.PAYMENT_DB_NAME}}
  DB_USERNAME: ${{secrets.DB_USERNAME}}
  DB_PASSWORD: ${{secrets.DB_PASSWORD}}
  JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
  JWT_ACCESS_TOKEN_EXPIRY_IN_SEC: ${{secrets.JWT_ACCESS_TOKEN_EXPIRY_IN_SEC}}
  USER_ENDPOINT: ${{secrets.USER_ENDPOINT}}
  OPE_ENDPOINT: ${{secrets.OPE_ENDPOINT}}
  EEFA_ENDPOINT: ${{secrets.EEFA_ENDPOINT}}
  EEFA_USER: ${{secrets.EEFA_USER}}
  EEFA_ENTITY_ACTIVITY_ID: ${{secrets.EEFA_ENTITY_ACTIVITY_ID}}
  EEFA_PASS: ${{secrets.EEFA_PASS}}
  EXPIRE_TOPUP_INTENT: ${{secrets.EXPIRE_TOPUP_INTENT}}
  AWS_SES_EMAIL: ${{secrets.AWS_SES_EMAIL}}
  BULK_TOPUP_CC_EMAILS: ${{secrets.BULK_TOPUP_CC_EMAILS}}
  REGION: ${{secrets.REGION}}
  EASYPAISA_USERNAME: ${{secrets.EASYPAISA_USERNAME}}
  EASYPAISA_PASSWORD: ${{secrets.EASYPAISA_PASSWORD}}
  EASYPAISA_BANK_MNEMONIC: ${{secrets.EASYPAISA_BANK_MNEMONIC}}
  SENTRY_DSN: ${{secrets.SENTRY_DSN}}
  BNPL_WALLET_ENDPOINT: ${{secrets.BNPL_WALLET_ENDPOINT}}

jobs:
  init:
    name: init
    runs-on: self-hosted
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: installing packages
        run: |
          npm config set @demoorg:registry=https://npm.pkg.github.com
          npm config set "//npm.pkg.github.com/:_authToken" ${{ secrets.GH_NPM_TOKEN }}
          npm ci

  build:
    name: build
    needs: init
    runs-on: self-hosted
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: building project
        run: |
          npm run build

  lint:
    name: lint
    needs: init
    runs-on: self-hosted
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: linting check
        run: npm run lint

  unit-tests:
    name: unit-tests
    needs: build
    runs-on: self-hosted
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: unit tests
        run: npm run test
